// Generated by Dagger (https://dagger.dev).
package com.example.dagger2_test;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PresenterModule_ProvidePresenterFactory implements Factory<Presenter> {
  private final PresenterModule module;

  public PresenterModule_ProvidePresenterFactory(PresenterModule module) {
    this.module = module;
  }

  @Override
  public Presenter get() {
    return providePresenter(module);
  }

  public static PresenterModule_ProvidePresenterFactory create(PresenterModule module) {
    return new PresenterModule_ProvidePresenterFactory(module);
  }

  public static Presenter providePresenter(PresenterModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providePresenter());
  }
}
