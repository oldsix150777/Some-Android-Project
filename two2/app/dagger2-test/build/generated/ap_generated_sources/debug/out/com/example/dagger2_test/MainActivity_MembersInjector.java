// Generated by Dagger (https://dagger.dev).
package com.example.dagger2_test;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Presenter> mPresenterProvider;

  public MainActivity_MembersInjector(Provider<Presenter> mPresenterProvider) {
    this.mPresenterProvider = mPresenterProvider;
  }

  public static MembersInjector<MainActivity> create(Provider<Presenter> mPresenterProvider) {
    return new MainActivity_MembersInjector(mPresenterProvider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectMPresenter(instance, mPresenterProvider.get());
  }

  @InjectedFieldSignature("com.example.dagger2_test.MainActivity.mPresenter")
  public static void injectMPresenter(MainActivity instance, Presenter mPresenter) {
    instance.mPresenter = mPresenter;
  }
}
