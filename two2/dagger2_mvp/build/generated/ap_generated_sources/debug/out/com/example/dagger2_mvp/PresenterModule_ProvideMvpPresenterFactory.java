// Generated by Dagger (https://dagger.dev).
package com.example.dagger2_mvp;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PresenterModule_ProvideMvpPresenterFactory implements Factory<MvpPresenter> {
  private final PresenterModule module;

  public PresenterModule_ProvideMvpPresenterFactory(PresenterModule module) {
    this.module = module;
  }

  @Override
  public MvpPresenter get() {
    return provideMvpPresenter(module);
  }

  public static PresenterModule_ProvideMvpPresenterFactory create(PresenterModule module) {
    return new PresenterModule_ProvideMvpPresenterFactory(module);
  }

  public static MvpPresenter provideMvpPresenter(PresenterModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.provideMvpPresenter());
  }
}
